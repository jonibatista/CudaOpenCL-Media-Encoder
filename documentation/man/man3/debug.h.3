.TH "debug.h" 3 "Fri Nov 25 2011" "Version v1.0.0" "Cuda Codificador" \" -*- nroff -*-
.ad l
.nh
.SH NAME
debug.h \- 
.PP
Macros das funções de depuração  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBDEBUG\fP(...)   debug(__FILE__, __LINE__, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBWARNING\fP(...)   warning(__FILE__, __LINE__, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBERROR\fP(exitCode,...)   error(__FILE__, __LINE__, (exitCode), __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBH_WARNING\fP(...)   h_warning(__FILE__, __LINE__, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBH_ERROR\fP(exitCode,...)   h_error(__FILE__, __LINE__, (exitCode), __VA_ARGS__)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBdebug\fP (const char *file, const int line, char *fmt,...)"
.br
.ti -1c
.RI "void \fBwarning\fP (const char *file, const int line, char *fmt,...)"
.br
.ti -1c
.RI "void \fBerror\fP (const char *file, const int line, int exitCode, char *fmt,...)"
.br
.ti -1c
.RI "void \fBh_warning\fP (const char *file, const int line, char *fmt,...)"
.br
.ti -1c
.RI "void \fBh_error\fP (const char *file, const int line, int exitCode, char *fmt,...)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Macros das funções de depuração 

Macros que serão usadas nos programas desenvolvidos ao longo dos exemplos. Estas macros podem receber um número variável de parâmetros através de uma string de formatação como no 'printf'. Seguem-se alguns exemplos: 
.PP
.nf
 DEBUG('i = %d e f=.2f%', i, f);
 ERROR('%s', msg);

.fi
.PP
 
.PP
\fBAuthor:\fP
.RS 4
Miguel Frade, Patricio Domingues, Vitor Carreira 
.RE
.PP
\fBDate:\fP
.RS 4
Agosto de 2003 
.RE
.PP
\fBVersion:\fP
.RS 4
2 
.RE
.PP

.SH "Define Documentation"
.PP 
.SS "#define DEBUG(...)   debug(__FILE__, __LINE__, __VA_ARGS__)"Macro para imprimir no stderr informações úteis para depuração. O número de parâmetros de entrada é variável.
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBdebug()\fP 
.RE
.PP

.SS "#define ERROR(exitCode, ...)   error(__FILE__, __LINE__, (exitCode), __VA_ARGS__)"Macro para imprimir no stderr informação relacionada com insucesso de chamadas de funções e termina a execução do programa. O número de parâmetros de entrada é variável.
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBerror()\fP 
.RE
.PP

.SS "#define H_ERROR(exitCode, ...)   h_error(__FILE__, __LINE__, (exitCode), __VA_ARGS__)"Macro para imprimir no stderr informação relacionada com insucesso de chamadas de funções de resolução de nomes e termina a execução do programa. O número de parâmetros de entrada é variável.
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBh_error()\fP 
.RE
.PP

.SS "#define H_WARNING(...)   h_warning(__FILE__, __LINE__, __VA_ARGS__)"Macro para imprimir no stderr informação relacionada com insucesso de chamadas de funções de resolução de nomes, mas não termina a execução do programa. O número de parâmetros de entrada é variável.
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBh_warning()\fP 
.RE
.PP

.SS "#define WARNING(...)   warning(__FILE__, __LINE__, __VA_ARGS__)"Macro para imprimir no stderr informação relacionada com insucesso de chamadas de funções, mas não termina a execução do programa. O número de parâmetros de entrada é variável.
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBwarning()\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void debug (const char *file, const intline, char *fmt, ...)"Esta função deve ser utilizada para auxiliar a depuração de programas. Esta função \fBnão deve\fP ser chamada directamente, mas sim através da macro \fBDEBUG()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP nome do ficheiro (através da macro DEBUG) 
.br
\fIline\fP linha onde a função foi chamada (através da macro DEBUG) 
.br
\fIfmt\fP string de formatação como no 'printf' 
.br
\fI...\fP nº variável de parâmetros 
.RE
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBDEBUG\fP 
.RE
.PP

.SS "void error (const char *file, const intline, intexitCode, char *fmt, ...)"Função que envia para o canal de erros a mensagem 'ERROR' rotulada com o nome do ficheiro e da linha da função chamante, e ainda da mensagem de erro do sistema. A função \fBnão deve\fP ser chamada directamente, mas sim através da macro \fBERROR()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP nome do ficheiro fonte da função chamante (através da macro ERROR) 
.br
\fIline\fP linha onde a função foi chamada (através da macro ERROR) 
.br
\fIexitCode\fP valor passado à função 'exit()' 
.br
\fIfmt\fP string de formatação como no 'printf' 
.br
\fI...\fP nº variável de parâmetros 
.RE
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBERROR\fP 
.RE
.PP

.SS "void h_error (const char *file, const intline, intexitCode, char *fmt, ...)"Função que envia para o canal de erros a mensagem 'H_ERROR' rotulada com o nome do ficheiro e da linha da função chamante, e ainda da mensagem de erro do sistema. A função \fBnão deve\fP ser chamada directamente, mas sim através da macro \fBH_ERROR()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP nome do ficheiro fonte da função chamante (através da macro H_ERROR) 
.br
\fIline\fP linha onde a função foi chamada (através da macro H_ERROR) 
.br
\fIexitCode\fP valor passado à função 'exit()' 
.br
\fIfmt\fP string de formatação como no 'printf' 
.br
\fI...\fP nº variável de parâmetros 
.RE
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBH_ERROR\fP 
.RE
.PP

.SS "void h_warning (const char *file, const intline, char *fmt, ...)"Função que envia para o canal de erros a mensagem 'H_WARNING' rotulada com o nome do ficheiro e da linha da função chamante, e ainda da mensagem de erro do sistema. A função \fBnão deve\fP ser chamada directamente, mas sim através da macro \fBH_WARNING()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP nome do ficheiro fonte da função chamante (através da macro H_WARNING) 
.br
\fIline\fP linha onde a função foi chamada (através da macro H_WARNING) 
.br
\fIfmt\fP string de formatação como no 'printf' 
.br
\fI...\fP nº variável de parâmetros 
.RE
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBH_WARNING\fP 
.RE
.PP

.SS "void warning (const char *file, const intline, char *fmt, ...)"Função que envia para o canal de erros a mensagem 'WARNING' rotulada com o nome do ficheiro e da linha da função chamante e ainda da mensagem de erro do sistema. A função \fBnão deve\fP ser chamada directamente, mas sim através da macro \fBWARNING()\fP.
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP nome do ficheiro fonte da função chamante (através da macro WARNING) 
.br
\fIline\fP linha onde a função foi chamada (através da macro WARNING) 
.br
\fIfmt\fP string de formatação como no 'printf' 
.br
\fI...\fP nº variável de parâmetros 
.RE
.PP
\fBReturns:\fP
.RS 4
A função não retorna nada 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBWARNING\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Cuda Codificador from the source code.
